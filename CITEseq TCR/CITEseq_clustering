library("Seurat") #load Seurat 4
library("matrixStats")
library('tidyverse')
library(viridis)
library('dplyr')
library('pheatmap')
library(ggplot2)

#####read seruat object including both CD4 and CD8 T cells
Tcell <- readRDS(file.choose())
File_source_name <-"Human_CD8_CD4_integrated_cDNA_VDJ_jun28_2022.rds"
###list the row names of CITE
rownames(Tcell@assays$CITE)
####The staining of CCR6(CD196) and CCR7(CD197) is not good. Remove them from CITE list ##"CD197","CD196"
####Remove the B cell markers
CITEmarkers <- c("CD38","CD27","CD62L" ,"CD69","HLA-DR","CD279","CD57","CD103","CD183","CD185")
SubsetCITE <- Tcell@assays$CITE[CITEmarkers,colnames(Tcell)]
Tcell[["CITE2"]] <- CreateAssayObject(data = as.matrix(SubsetCITE))

#######################################
##subset CD4 and CD8
Idents(Tcell) <- "Sample_type"
CD4 <- subset(Tcell,idents = "CD4_sc.singlet")
CD8 <- subset(Tcell,idents = "CD8_sc.singlet")

##clustering with new CITE2 surface antibodies within CD4
adt.dist.T.CD4<- dist(t(GetAssayData(CD4, assay = "CITE2", slot = "data")))
CD4[["adt_CD4_snn"]] <- FindNeighbors(adt.dist.T.CD4, nn.eps = 1)$snn
CD4 <- FindClusters(CD4, resolution = c(1), graph.name = "adt_CD4_snn", algorithm = 1)
##run UMAP within CD4
CD4 <- RunUMAP(CD4, assay = "CITE2", features = rownames(CD4[["CITE2"]]), n_neighbors=50L, min_dist=1)
active.assay <- "CITE2"
UMAPciteCD4 <- DimPlot(CD4, pt.size = 0.5, reduction = "umap", group.by = "adt_CD4_snn_res.1", label=TRUE)
UMAPciteCD4

# get metadata
mdCD4 = CD4@meta.data %>% select(adt_CD4_snn_res.1)

# get data
adtCD4 = GetAssayData(CD4[["CITE2"]]) %>%
  t %>%
  as.data.frame %>%
  rownames_to_column("cell")
mdCD4 <- mdCD4 %>% rownames_to_column("cell")

adtCD4 <- adtCD4 %>%
  select(-c(cell)) %>%
  mutate(cell_type = mdCD4$adt_CD4_snn_res.1) %>%
  select(cell_type, everything())

source(file.choose())
environment(AverageExpression_MeanOnly) <- asNamespace('Seurat') # need this to allow the function to call hidden seurat package functions

Idents(CD4) <- "adt_CD4_snn_res.1"
aver_CD4 = AverageExpression_MeanOnly(CD4, return.seurat=T)

quantile_breaks <- function(xs, n = 100) {
  breaks <- quantile(xs, probs = seq(0.5, 1, length.out = n))
  breaks[!duplicated(breaks)]
}

mat_breaks_CD4 <- quantile_breaks(as.matrix(GetAssayData(aver_CD4[["CITE2"]])), n = 101)

##Heatmap of surface protein antibodies among CD4 T cells
plotCD84 <- pheatmap(GetAssayData(aver_CD4[["CITE2"]]), 
               border_color=NA,
               inferno(length(mat_breaks_CD4) - 1),
               kmeans_k = NA,
               breaks = mat_breaks_CD4,
               scale = "none", ### CHANGE t() ABOVE TO CONTROL BETTER ###
               angle_col = 90,
               cluster_rows = TRUE,
               cellwidth = 10,
               cellheight = 10,
               treeheight_row = 10,
               treeheight_col = 10,
               silent = FALSE,
               main = "columns: clusters")
ggsave("CD4_heatmap_06072022.pdf",
       width = 4,
       height = 3,
       dpi = 300)

saveRDS(CD4, "CD4.rds")
##############################################################
##clustering with CITEseq surface antibodies within CD8
adt.dist.T.CD8<- dist(t(GetAssayData(CD8, assay = "CITE2", slot = "data")))
CD8[["adt_CD8_snn"]] <- FindNeighbors(adt.dist.T.CD8, nn.eps = 1)$snn
CD8 <- FindClusters(CD8, resolution = c(1), graph.name = "adt_CD8_snn", algorithm = 1)

##run UMAP within CD8
CD8 <- RunUMAP(CD8, assay = "CITE2", features = rownames(CD8[["CITE2"]]), n_neighbors=50L, min_dist=1)
##CITE UMAP
active.assay <- "CITE2"
UMAPciteCD8 <- DimPlot(CD8, pt.size = 0.5, reduction = "umap", group.by = "adt_CD8_snn_res.1", label=TRUE)
UMAPciteCD8
ggsave("adt_CD8_snn.pdf", width = 5, height = 5)

# get metadata
mdCD8 = CD8@meta.data %>% select(adt_CD8_snn_res.1)

# get data
adtCD8 = GetAssayData(CD8[["CITE2"]]) %>%
  t %>%
  as.data.frame %>%
  rownames_to_column("cell")
mdCD8 <- mdCD8 %>% rownames_to_column("cell")

adtCD8 <- adtCD8 %>%
  select(-c(cell)) %>%
  mutate(cell_type = mdCD8$adt_CD8_snn_res.1) %>%
  select(cell_type, everything())

##source("AverageExpression_MeanOnly.r")
source(file.choose())
environment(AverageExpression_MeanOnly) <- asNamespace('Seurat') # need this to allow the function to call hidden seurat package functions

Idents(CD8) <- "adt_CD8_snn_res.1"
aver_CD8 = AverageExpression_MeanOnly(CD8, return.seurat=T)

quantile_breaks <- function(xs, n = 100) {
  breaks <- quantile(xs, probs = seq(0.5, 1, length.out = n))
  breaks[!duplicated(breaks)]
}

mat_breaks_CD8 <- quantile_breaks(as.matrix(GetAssayData(aver_CD8[["CITE2"]])), n = 101)

library("viridis")

plotCD8 <- pheatmap(GetAssayData(aver_CD8[["CITE2"]]), 
         border_color=NA,
         inferno(length(mat_breaks_CD8) - 1),
         kmeans_k = NA,
         breaks = mat_breaks_CD8,
         scale = "none", ### CHANGE t() ABOVE TO CONTROL BETTER ###
         angle_col = 90,
         cluster_rows = TRUE,
         cellwidth = 10,
         cellheight = 10,
         treeheight_row = 10,
         treeheight_col = 10,
         silent = FALSE,
         main = "columns: clusters")


ggsave("CD8_heatmap_06072022.pdf", width = 4, height = 3,dpi = 300)

